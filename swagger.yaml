openapi: 3.0.3
info:
  title: Library REST API
  version: 1.0.0
  description: API for Library management (users, books, borrowings)
servers:
  - url: http://localhost:3000/api
paths:
  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
      responses:
        '200':
          description: Login successful
        '401':
          description: Invalid credentials
  /signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
      responses:
        '201':
          description: Signup successful
        '422':
          description: Validation error
  /books:
    get:
      summary: List all books
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of books
    post:
      summary: Create a new book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book:
                  type: object
                  properties:
                    title:
                      type: string
                    author:
                      type: string
                    genre:
                      type: string
                    isbn:
                      type: string
                    total_copies:
                      type: integer
      responses:
        '201':
          description: Book created
  /books/{id}:
    put:
      summary: Update a book
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                book:
                  type: object
                  properties:
                    title:
                      type: string
                    author:
                      type: string
                    genre:
                      type: string
                    isbn:
                      type: string
                    total_copies:
                      type: integer
      responses:
        '200':
          description: Book updated
    delete:
      summary: Delete a book
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book deleted
  /books/search:
    get:
      summary: Search books by title, author, or genre
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results
  /borrowings:
    post:
      summary: Borrow a book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                borrowing:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    book_id:
                      type: integer
      responses:
        '201':
          description: Borrowing created
  /borrowings/{id}/return:
    patch:
      summary: Mark borrowing as returned
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                borrowing:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    book_id:
                      type: integer
      responses:
        '200':
          description: Borrowing marked as returned
  /dashboard:
    get:
      summary: Get dashboard data
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard data
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
